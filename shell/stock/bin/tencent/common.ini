g_url_data_day_times="http://stock.gtimg.cn/data/index.php?appn=detail&action=timeline&c=[stockcode]"
g_url_data_day_detail="http://stock.gtimg.cn/data/index.php?appn=detail&action=data&c=[stockcode]&p=[times]"

#是否只获取当天的day_detail
g_day_detail_timeSync=1

g_mysql_ip=localhost
g_mysql_port=3306
g_mysql_user=root
g_mysql_passwd=000000
g_mysql_db=dbstock

g_mysql_connect_timeout=30

g_curl_connect_time=10
g_curl_max_time=20
g_max_stock=8000
g_mysql_conn="mysql -h${g_mysql_ip} -u${g_mysql_user} -p${g_mysql_passwd} -P${g_mysql_port} --connect_timeout=${g_mysql_connect_timeout} "
g_url_stockList="http://stock.gtimg.cn/data/index.php?appn=rank&t=ranka/chr&p=1&o=0&l=${g_max_stock}&v=list_data"

g_logLevel=DEBUG
g_dbtable_stockcalendar="stockcalendar"
g_dbtable_stocklist="stocklist"

declare -A level_map=()
level_map["DEBUG"]=1
level_map["INFO"]=2
level_map["WARNING"]=3
level_map["ERROR"]=4
level_map["FATAL"]=5

if [ -z "${toppath}" ];then
toppath=$(cd $(dirname $0);pwd)
fi

g_filename=`basename $0`

g_logfile_stock=${toppath}/logs/stock

function url_request()
{
	local url=$1
	local url_value
	local ret
	local trytimes=0
	while ((${trytimes}<3))
	do
		url_value=$(curl --connect-timeout ${g_curl_connect_time} -m ${g_curl_max_time} "${url}" 2>/dev/null)
		ret=$?
		if [ ${ret} -eq 0 ];then
			break;
		fi
		let trytimes++
		sleep 5
	done
	echo ${url_value}
	return ${ret}
}

#return 0:success ;1 连接失败 ；2 database is not exist ;3 table is not exist; 255 UNKONW
#dbstock_check_table
function dbstock_check_table()
{
	if [ $# -ne 1 ];then
		return 255
	fi
	local table=$1
	local value
	local ret	
	value=$(${g_mysql_conn} -D ${g_mysql_db} -e "show tables;" 2>&1)
        ret=$?
	# 连接超时，或者db不存在
	if [ ${ret} -ne 0 ];then
		local temp_list=(`echo "${value}" | grep "^ERROR"`)
		case ${temp_list[1]} in
			"2013") #连接失败
				ret=1
				;;
			"1049") #数据库不存在
				ret=2
				;;
			"*")
				ret=255
				;;
		esac
	else
		local temp_value=$(echo "${value}" | grep -v "ERROR" | grep -o "${table}")
		if [ "${temp_value}x" = "${table}x" ];then 
			ret=0
		else
			ret=3 
		fi
	fi

       	echo ${value}
      	return ${ret}
}
#create_table db table
#function create_db()
#{}

#db_insert tablename  values
#values 的长度不能太长
function dbstock_insert()
{
	if [ $# -ne 2 ];then
		echo "param $# != 2 "
		return 255
	fi
	
	local table=$1
	local values=$2
	local value
	local ret
	
	value=$(${g_mysql_conn} -e "use ${g_mysql_db}; insert into ${table} values ${values};" 2>&1)	
	ret=$?
	echo "${value}"
	return ${ret}
}

# create_db_table table_name table_arrt 
function dbstock_create_table()
{
	if [ $# -ne 2 ];then
		echo "param = $*"
		return 255
	fi
		
	local table=$1
	local table_arrt=$2
	local mysql_cmd=""
	local value
	local ret
	
	value=$(dbstock_check_table ${table})
	ret=$?
	if [ ${ret} -eq 0 ];then
		return 0
	fi
	if [ ${ret} -eq 2 ];then
		value=$(${g_mysql_conn} -e "create database ${g_mysql_db};use ${g_mysql_db};create table ${table}${table_arrt};show tables;" 2>&1)
		ret=$?

	elif [ ${ret} -eq 3 ];then
		value=$(${g_mysql_conn} -e "use ${g_mysql_db};create table ${table}${table_arrt};show tables;" 2>&1)
		ret=$?
	else
		log ERROR "${value} $LINENO" ${g_logfile_stock}
		return ${ret}
	fi
	
	if [ ${ret} -eq 0 ];then
		value=$(echo "${value}" | grep -v "ERROR" | grep -o "${table}")
		if [ "${value}s" = "${table}s" ];then
			ret=0
		else
			ret=255
		fi
	fi
	echo ${value}
	return ${ret}
}



#打印日志，格式为：log LEVEL "msg" outlogFile “不带后缀”
function log()
{
	if [ $# -lt 2 ];then
		echo "log param error"
			return
	fi

	if [ $# -eq 3 ];then
		local outLogFile=$3
	else
		local outLogFile=${log_dir}/monitor/monitor_task		
	fi
	local outLogDir=$(dirname ${outLogFile})
	local level=$1
	local str=$2
	local ls_value
	local file_size
	local time_

	if [ ! -d ${outLogDir} ];then
		mkdir -p ${outLogDir}
	fi
	
	if [ -z "${level_map[${level}]}" ] || [ ${level_map[${level}]} -ge ${level_map[${g_logLevel}]} ];then
		
		time_=`date +%Y-%m-%d-%H:%M:%S`
		echo "[${time_}] [${level}] [${g_filename}] ${str}" >> ${outLogFile}.log
		
		ls_value=`ls -l ${outLogFile}.log 2>&1`
		if [ $? -ne 0 ];then
			return
		fi
		
		file_size=`echo "${ls_value}" | head -1 | awk '{print int($5/1024/1024)}'`
	
		if [ ! -z "${file_size}" ] && [ ${file_size} -ge 20 ];then
			local log_name="${outLogFile}.$(date +%Y%m%d%H%M%S)"
			mv ${outLogFile}.log ${log_name}.log
		fi
	fi

}